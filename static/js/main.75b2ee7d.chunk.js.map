{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","completed","title","cn","TodoList","todos","map","username","getUser","userId","usersFromServer","find","App","useState","setTitle","isTitleValid","setIsTitleValid","isUserValid","setIsUserValid","setUser","actualTodos","setTodos","handleChange","event","target","value","Number","action","method","onSubmit","preventDefault","addedTodo","Math","max","trim","type","placeholder","onChange","userFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75b2ee7d.chunk.js","sourcesContent":["import React from 'react';\n\nexport type User = {\n  id: number,\n  name: string,\n  email: string,\n};\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { UserInfo, User } from '../UserInfo';\n\nexport type Todo = {\n  id: number,\n  userId: number,\n  title: string,\n  completed: boolean,\n  user: User | null,\n};\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo, TodoInfo } from '../TodoInfo';\n\ntype Todos = {\n  todos: Todo[];\n};\n\nexport const TodoList:React.FC<Todos> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { User } from './components/UserInfo';\nimport { Todo } from './components/TodoInfo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  // if there is no user with a given userId\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [isTitleValid, setIsTitleValid] = useState(false);\n  const [isUserValid, setIsUserValid] = useState(false);\n  const [user, setUser] = useState(0);\n  const [actualTodos, setTodos] = useState(todos);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const newId = Math.max(...todos.map(todo => todo.id)) + 1;\n\n    const addedTodo: Todo = {\n      id: newId,\n      completed: false,\n      user: getUser(Number(user)),\n      title: title.trim(),\n      userId: Number(user),\n    };\n\n    if (!title) {\n      setIsTitleValid(true);\n    }\n\n    if (!user) {\n      setIsUserValid(true);\n    }\n\n    if (!user || !title) {\n      return;\n    }\n\n    setTodos([...actualTodos, addedTodo]);\n    setTitle('');\n    setUser(0);\n  };\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    const { name, value } = event.target;\n\n    if (name === 'title') {\n      setTitle(value);\n      setIsTitleValid(false);\n    } else {\n      setUser(Number(value));\n      setIsUserValid(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <input\n            name=\"title\"\n            type=\"text\"\n            value={title}\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            onChange={handleChange}\n          />\n\n          {!isTitleValid && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={user}\n            onChange={handleChange}\n          >\n            <option value=\"0\">Choose a user</option>\n            {usersFromServer.map(userFromServer => (\n              <option\n                value={userFromServer.id}\n                key={userFromServer.id}\n              >\n                {userFromServer.name}\n              </option>\n            ))}\n          </select>\n\n          {isUserValid && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={actualTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}